name: Build and Deploy

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          if [ "${{ matrix.os }}" = "macOS-latest" ]; then
            brew install cmake nasm perl
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential cmake nasm perl
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            choco install -y cmake
            choco install -y nasm
            choco install -y perl
          fi
      - name: Build nginx-quic with BoringSSL
        run: |
          git clone https://boringssl.googlesource.com/boringssl
          cd boringssl
          mkdir build
          cd build
          if [ "${{ matrix.os }}" = "macOS-latest" ]; then
            cmake -G "Xcode" ..
            cmake --build . --config Release
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            cmake ..
            make
            sudo make install
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            cmake -G "Visual Studio 15 2017 Win64" ..
            cmake --build . --config Release
          fi
          cd ../..
          hg clone -b quic https://hg.nginx.org/nginx-quic
          cd nginx-quic
          if [ "${{ matrix.os }}" = "macOS-latest" ]; then
            set OPENSSL_DIR=$PWD/../boringssl/build
            set PATH=$PATH:$PWD/../boringssl/build/bin
            gmake
          elif [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            set OPENSSL_DIR=$PWD/../boringssl/build
            set PATH=$PATH:$PWD/../boringssl/build/bin
            make
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            set OPENSSL_DIR=c:/boringssl/build
            set PATH=%PATH%;C:\boringssl\build\bin
            nmake
          fi
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: nginx-${{ matrix.os }}
          path: nginx-quic/objs/nginx
