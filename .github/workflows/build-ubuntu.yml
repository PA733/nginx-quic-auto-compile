name: Build

on:
  [push, workflow_dispatch]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Prepare
      run: |
        curl -s https://nginx.org/keys/nginx_signing.key | sudo gpg --quiet --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/nginx.gpg --import
        sudo chown _apt /etc/apt/trusted.gpg.d/nginx.gpg
        echo "deb [arch=amd64] https://nginx.org/packages/mainline/ubuntu $(lsb_release -c -s) nginx" | sudo tee -a /etc/apt/sources.list.d/nginx.list >> /dev/null
        echo "deb-src https://nginx.org/packages/mainline/ubuntu $(lsb_release -c -s) nginx" | sudo tee -a /etc/apt/sources.list.d/nginx.list >> /dev/null
        sudo apt-get -qq update
        sudo apt-get install -qq mercurial
        sudo add-apt-repository -y ppa:longsleep/golang-backports
        sudo apt-get install -qq golang-go libunwind-dev
        sudo apt-get build-dep -qq nginx
    - name: Get NGINX source code
      run: |
        sudo apt-get source -qq nginx
        mv $(ls -F | grep nginx | grep /$) nginx-src
    - name: Get NGINX-QUIC source code
      run: |
        hg clone -b quic https://hg.nginx.org/nginx-quic
        sudo rsync -r nginx-quic/ nginx-src/
    - name: Get QuicTLS source code
      run: |
        git clone https://github.com/quictls/openssl.git --depth=1
    - name: Build QuicTLS
      run: |
        cd openssl/
        ./config --prefix=${{ github.workspace }}/openssl/build
        ./config -t
        make -j$(expr $(nproc) \+ 1)
    # - name: Get NGINX-PageSpeed source code
    #   run: |
    #     mkdir nginx-src/debian/modules
    #     cd nginx-src/debian/modules
    #     wget https://github.com/apache/incubator-pagespeed-ngx/archive/v1.13.35.2-stable.zip
    #     unzip v1.13.35.2-stable.zip
    #     sudo mv incubator-pagespeed-ngx-1.13.35.2-stable ngx_pagespeed
    #     cd ngx_pagespeed
    #     sudo wget https://dl.google.com/dl/page-speed/psol/1.13.35.2-x64.tar.gz
    #     sudo tar -xzvf 1.13.35.2-x64.tar.gz
    - name: Get brotli source-code
      run: |
        sudo mkdir -p nginx-src/debian/modules
        cd nginx-src/debian/modules
        sudo git clone --depth=1 --recursive https://github.com/google/ngx_brotli
    - name: Configure NGINX-QUIC
      # Replace 'CFLAGS=""' with 'CFLAGS="-Wno-ignored-qualifiers"' in nginx-src/debian/rules
      # Append QUIC module to nginx-src/debian/rules
      # Append NGINX-Brotli module tonginx-src/debian/rules
      # Append version info to nginx-src/debian/changelog
      run: |
        sudo sed -i 's/CFLAGS=""/CFLAGS="-Wno-ignored-qualifiers"/g' nginx-src/debian/rules
        sudo sed -i '\|CFLAGS="-Wno-ignored-qualifiers"| s|$| --with-http_v3_module --with-stream_quic_module --with-cc-opt="-I${{ github.workspace }}\/openssl\/build\/include $(CFLAGS)" --with-ld-opt="-L${{ github.workspace }}\/openssl\/build\/lib64 $(LDFLAGS)"|' nginx-src/debian/rules
        sudo sed -i '/--sbin-path=\/usr\/sbin\/nginx/ s/$/ --add-module="$(CURDIR)\/debian\/modules\/ngx_brotli"/' nginx-src/debian/rules
        sudo sed -i '1s/^/nginx (9.99.9-1~bionic+brotli+http3+quic) bionic; urgency=low\n\n  * 9.99.9-1\n\n -- PA733 <admin@ypemc.com>  Tue, 24 Nov 2099 16:02:03 +0300\n/' nginx-src/debian/changelog

    - name: Build NGINX-QUIC
      run: |
        cd nginx-src/
        sudo dpkg-buildpackage -b -uc -us
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: nginx-quic-${{ matrix.os }}
        path: ${{ github.workspace }}/**/*.deb
